/**
 * Code adapted from https://www.freecodecamp.org/news/learn-how-to-handle-authentication-with-node-using-passport-js-4a56ed18e81e/
 * This file implements everything related to express-jwt
 */
const jwt = require('express-jwt');

// Extract token from request "Authentication" header
const getTokenFromHeaders = (req) => {
  const { headers: { authorization } } = req;

  if(authorization && authorization.split(' ')[0] === 'Token') {
    return authorization.split(' ')[1];
  }
  return null;
};

// Create auth object using headers. Impt: Change secret to string generated by crypto. This will be referenced by generation function in Users.js
// Difference from freecodecamp: algorithms field is required for express-jwt
// each object in this json provides a different config to jwt, users are either required or not required to log in to access the path
const auth = {
  required: jwt({
    secret: 'secret',
    userProperty: 'payload',
    algorithms: ['HS256'],
    getToken: getTokenFromHeaders,
  }),
  optional: jwt({
    secret: 'secret',
    userProperty: 'payload',
    algorithms: ['HS256'],
    getToken: getTokenFromHeaders,
    credentialsRequired: false,
  }),
};

module.exports = auth;